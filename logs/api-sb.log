2024-01-04 10:41:41,448 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] Starting DailyApiApplication using Java 17.0.7 with PID 5932 (C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API\target\classes started by Darlan in C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API)
2024-01-04 10:41:41,455 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] No active profile set, falling back to 1 default profile: "default"
2024-01-04 10:41:42,560 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 10:41:42,561 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-04 10:41:42,720 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 148 ms. Found 9 JPA repository interfaces.
2024-01-04 10:41:42,734 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 10:41:42,737 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-01-04 10:41:42,752 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.AnimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:42,752 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.DollarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:42,753 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.EmailRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:42,753 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:42,753 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:42,753 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.NewsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:42,754 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:42,754 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TVShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:42,754 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.WeatherPredictRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:42,754 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-01-04 10:41:42,982 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4b04ba5b-f4a8-3a56-a5c9-3e4a3e7afd5d
2024-01-04 10:41:58,692 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] Starting DailyApiApplication using Java 17.0.7 with PID 14900 (C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API\target\classes started by Darlan in C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API)
2024-01-04 10:41:58,693 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] No active profile set, falling back to 1 default profile: "default"
2024-01-04 10:41:59,729 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 10:41:59,731 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-04 10:41:59,855 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 116 ms. Found 9 JPA repository interfaces.
2024-01-04 10:41:59,867 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 10:41:59,868 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-01-04 10:41:59,880 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.AnimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:59,880 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.DollarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:59,880 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.EmailRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:59,880 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:59,880 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:59,880 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.NewsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:59,880 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:59,880 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TVShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:59,881 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.WeatherPredictRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 10:41:59,881 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-01-04 10:42:00,103 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4b04ba5b-f4a8-3a56-a5c9-3e4a3e7afd5d
2024-01-04 10:42:00,814 WARN io.undertow.websockets.jsr [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2024-01-04 10:42:00,836 INFO io.undertow.servlet [main] Initializing Spring embedded WebApplicationContext
2024-01-04 10:42:00,836 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 2103 ms
2024-01-04 10:42:01,376 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2024-01-04 10:42:01,569 INFO com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5c703860
2024-01-04 10:42:01,571 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2024-01-04 10:42:01,660 INFO org.flywaydb.core.internal.license.VersionPrinter [main] Flyway Community Edition 9.22.3 by Redgate
2024-01-04 10:42:01,660 INFO org.flywaydb.core.internal.license.VersionPrinter [main] See release notes here: https://rd.gt/416ObMi
2024-01-04 10:42:01,660 INFO org.flywaydb.core.internal.license.VersionPrinter [main] 
2024-01-04 10:42:01,670 INFO org.flywaydb.core.FlywayExecutor [main] Database: jdbc:postgresql://localhost:5432/daily (PostgreSQL 14.5)
2024-01-04 10:42:01,720 INFO org.flywaydb.core.internal.command.DbValidate [main] Successfully validated 0 migrations (execution time 00:00.020s)
2024-01-04 10:42:01,720 WARN org.flywaydb.core.internal.command.DbValidate [main] No migrations found. Are your locations set up correctly?
2024-01-04 10:42:01,737 INFO org.flywaydb.core.internal.command.DbMigrate [main] Current version of schema "public": << Empty Schema >>
2024-01-04 10:42:01,740 INFO org.flywaydb.core.internal.command.DbMigrate [main] Schema "public" is up to date. No migration necessary.
2024-01-04 10:42:01,835 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2024-01-04 10:42:01,922 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 6.3.1.Final
2024-01-04 10:42:01,965 INFO org.hibernate.cache.internal.RegionFactoryInitiator [main] HHH000026: Second-level cache disabled
2024-01-04 10:42:02,253 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [main] No LoadTimeWeaver setup: ignoring JPA class transformer
2024-01-04 10:42:03,277 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-01-04 10:42:03,319 DEBUG org.hibernate.SQL [main] create table weather_sky (id_local bigint not null, description varchar(255), main varchar(255), primary key (id_local))
2024-01-04 10:42:03,342 DEBUG org.hibernate.SQL [main] create table weather_wind (id_local bigint not null, deg integer, gust float(53), speed float(53), primary key (id_local))
2024-01-04 10:42:03,346 DEBUG org.hibernate.SQL [main] create sequence weather_sky_seq start with 1 increment by 50
2024-01-04 10:42:03,349 DEBUG org.hibernate.SQL [main] create sequence weather_wind_seq start with 1 increment by 50
2024-01-04 10:42:03,405 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-01-04 10:42:03,530 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-01-04 10:42:03,877 DEBUG org.hibernate.stat.internal.StatisticsInitiator [main] Statistics initialized [enabled=false]
2024-01-04 10:42:06,795 INFO org.springframework.cloud.commons.util.InetUtils [main] Cannot determine local hostname
2024-01-04 10:42:06,829 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 16 endpoint(s) beneath base path '/actuator'
2024-01-04 10:42:06,899 INFO io.undertow [main] starting server: Undertow - 2.3.10.Final
2024-01-04 10:42:06,909 INFO org.xnio [main] XNIO version 3.8.8.Final
2024-01-04 10:42:06,916 INFO org.xnio.nio [main] XNIO NIO Implementation Version 3.8.8.Final
2024-01-04 10:42:06,994 INFO org.jboss.threads [main] JBoss Threads version 3.5.0.Final
2024-01-04 10:42:07,049 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [main] Undertow started on port 8193 (http)
2024-01-04 10:42:08,126 INFO org.springframework.cloud.commons.util.InetUtils [main] Cannot determine local hostname
2024-01-04 10:42:08,138 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] Started DailyApiApplication in 10.824 seconds (process running for 11.309)
2024-01-04 12:15:55,138 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-01-04 12:15:55,139 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2024-01-04 12:15:55,142 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 3 ms
2024-01-04 12:15:56,905 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /weather/now
jakarta.servlet.ServletException: Request processing failed: feign.codec.DecodeException: Error while extracting response for type [class tech.noetzold.dailyAPI.model.dto.WeatherResponse] and content type [application/json;charset=utf-8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1022)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:527)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1512)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: feign.codec.DecodeException: Error while extracting response for type [class tech.noetzold.dailyAPI.model.dto.WeatherResponse] and content type [application/json;charset=utf-8]
	at feign.InvocationContext.decode(InvocationContext.java:118)
	at feign.InvocationContext.proceed(InvocationContext.java:88)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:114)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:99)
	at org.springframework.cloud.openfeign.FeignCachingInvocationHandlerFactory$1.proceed(FeignCachingInvocationHandlerFactory.java:66)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:64)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:377)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:74)
	at org.springframework.cloud.openfeign.FeignCachingInvocationHandlerFactory.lambda$create$1(FeignCachingInvocationHandlerFactory.java:53)
	at jdk.proxy2/jdk.proxy2.$Proxy181.getWeather(Unknown Source)
	at tech.noetzold.dailyAPI.service.WeatherPredictService.getWeather(WeatherPredictService.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:64)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:516)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:409)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:371)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:74)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at tech.noetzold.dailyAPI.service.WeatherPredictService$$SpringCGLIB$$0.getWeather(<generated>)
	at tech.noetzold.dailyAPI.controller.WeatherPredictController.getWeather(WeatherPredictController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	... 52 common frames omitted
Caused by: org.springframework.web.client.RestClientException: Error while extracting response for type [class tech.noetzold.dailyAPI.model.dto.WeatherResponse] and content type [application/json;charset=utf-8]
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:118)
	at org.springframework.cloud.openfeign.support.SpringDecoder.decode(SpringDecoder.java:70)
	at org.springframework.cloud.openfeign.support.ResponseEntityDecoder.decode(ResponseEntityDecoder.java:61)
	at feign.optionals.OptionalDecoder.decode(OptionalDecoder.java:36)
	at feign.InvocationContext.decode(InvocationContext.java:114)
	... 97 common frames omitted
Caused by: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `tech.noetzold.dailyAPI.model.WeatherSky` from Array value (token `JsonToken.START_ARRAY`)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:406)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:354)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:103)
	... 101 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `tech.noetzold.dailyAPI.model.WeatherSky` from Array value (token `JsonToken.START_ARRAY`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 52] (through reference chain: tech.noetzold.dailyAPI.model.dto.WeatherResponse["weather"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeFromArray(BeanDeserializer.java:656)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:211)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2105)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1481)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:395)
	... 103 common frames omitted
2024-01-04 12:16:15,832 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2024-01-04 12:16:15,835 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-01-04 12:18:11,053 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] Starting DailyApiApplication using Java 17.0.7 with PID 25996 (C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API\target\classes started by Darlan in C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API)
2024-01-04 12:18:11,055 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] No active profile set, falling back to 1 default profile: "default"
2024-01-04 12:18:12,014 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 12:18:12,015 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-04 12:18:12,157 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 133 ms. Found 9 JPA repository interfaces.
2024-01-04 12:18:12,174 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 12:18:12,175 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-01-04 12:18:12,189 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.AnimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:18:12,189 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.DollarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:18:12,189 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.EmailRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:18:12,189 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:18:12,189 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:18:12,189 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.NewsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:18:12,189 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:18:12,189 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TVShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:18:12,190 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.WeatherPredictRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:18:12,190 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-01-04 12:18:12,394 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4b04ba5b-f4a8-3a56-a5c9-3e4a3e7afd5d
2024-01-04 12:18:13,013 WARN io.undertow.websockets.jsr [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2024-01-04 12:18:13,030 INFO io.undertow.servlet [main] Initializing Spring embedded WebApplicationContext
2024-01-04 12:18:13,030 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1929 ms
2024-01-04 12:18:13,513 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2024-01-04 12:18:13,675 INFO com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@c6bf8d9
2024-01-04 12:18:13,677 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2024-01-04 12:18:13,753 INFO org.flywaydb.core.internal.license.VersionPrinter [main] Flyway Community Edition 9.22.3 by Redgate
2024-01-04 12:18:13,754 INFO org.flywaydb.core.internal.license.VersionPrinter [main] See release notes here: https://rd.gt/416ObMi
2024-01-04 12:18:13,754 INFO org.flywaydb.core.internal.license.VersionPrinter [main] 
2024-01-04 12:18:13,766 INFO org.flywaydb.core.FlywayExecutor [main] Database: jdbc:postgresql://localhost:5432/daily (PostgreSQL 14.5)
2024-01-04 12:18:13,794 INFO org.flywaydb.core.internal.command.DbValidate [main] Successfully validated 0 migrations (execution time 00:00.013s)
2024-01-04 12:18:13,794 WARN org.flywaydb.core.internal.command.DbValidate [main] No migrations found. Are your locations set up correctly?
2024-01-04 12:18:13,824 INFO org.flywaydb.core.internal.command.DbMigrate [main] Current version of schema "public": << Empty Schema >>
2024-01-04 12:18:13,827 INFO org.flywaydb.core.internal.command.DbMigrate [main] Schema "public" is up to date. No migration necessary.
2024-01-04 12:18:13,912 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2024-01-04 12:18:13,961 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 6.3.1.Final
2024-01-04 12:18:13,994 INFO org.hibernate.cache.internal.RegionFactoryInitiator [main] HHH000026: Second-level cache disabled
2024-01-04 12:18:14,214 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [main] No LoadTimeWeaver setup: ignoring JPA class transformer
2024-01-04 12:18:15,129 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-01-04 12:18:15,159 DEBUG org.hibernate.SQL [main] alter table if exists weather_sky add column id bigint not null
2024-01-04 12:18:15,164 DEBUG org.hibernate.SQL [main] alter table if exists weather_wind add column id bigint not null
2024-01-04 12:18:15,214 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-01-04 12:18:15,326 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-01-04 12:18:15,652 DEBUG org.hibernate.stat.internal.StatisticsInitiator [main] Statistics initialized [enabled=false]
2024-01-04 12:18:18,452 INFO org.springframework.cloud.commons.util.InetUtils [main] Cannot determine local hostname
2024-01-04 12:18:18,489 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 16 endpoint(s) beneath base path '/actuator'
2024-01-04 12:18:18,570 INFO io.undertow [main] starting server: Undertow - 2.3.10.Final
2024-01-04 12:18:18,576 INFO org.xnio [main] XNIO version 3.8.8.Final
2024-01-04 12:18:18,582 INFO org.xnio.nio [main] XNIO NIO Implementation Version 3.8.8.Final
2024-01-04 12:18:18,649 INFO org.jboss.threads [main] JBoss Threads version 3.5.0.Final
2024-01-04 12:18:18,695 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [main] Undertow started on port 8193 (http)
2024-01-04 12:18:19,606 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-01-04 12:18:19,607 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2024-01-04 12:18:19,608 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 1 ms
2024-01-04 12:18:19,774 INFO org.springframework.cloud.commons.util.InetUtils [main] Cannot determine local hostname
2024-01-04 12:18:19,786 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] Started DailyApiApplication in 10.134 seconds (process running for 10.631)
2024-01-04 12:18:21,075 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /weather/now
jakarta.servlet.ServletException: Request processing failed: feign.codec.DecodeException: Error while extracting response for type [class tech.noetzold.dailyAPI.model.dto.WeatherResponse] and content type [application/json;charset=utf-8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1022)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:527)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1512)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: feign.codec.DecodeException: Error while extracting response for type [class tech.noetzold.dailyAPI.model.dto.WeatherResponse] and content type [application/json;charset=utf-8]
	at feign.InvocationContext.decode(InvocationContext.java:118)
	at feign.InvocationContext.proceed(InvocationContext.java:88)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:114)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:99)
	at org.springframework.cloud.openfeign.FeignCachingInvocationHandlerFactory$1.proceed(FeignCachingInvocationHandlerFactory.java:66)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:64)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:377)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:74)
	at org.springframework.cloud.openfeign.FeignCachingInvocationHandlerFactory.lambda$create$1(FeignCachingInvocationHandlerFactory.java:53)
	at jdk.proxy2/jdk.proxy2.$Proxy181.getWeather(Unknown Source)
	at tech.noetzold.dailyAPI.service.WeatherPredictService.getWeather(WeatherPredictService.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:64)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:392)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:516)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:409)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:371)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:74)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at tech.noetzold.dailyAPI.service.WeatherPredictService$$SpringCGLIB$$0.getWeather(<generated>)
	at tech.noetzold.dailyAPI.controller.WeatherPredictController.getWeather(WeatherPredictController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	... 52 common frames omitted
Caused by: org.springframework.web.client.RestClientException: Error while extracting response for type [class tech.noetzold.dailyAPI.model.dto.WeatherResponse] and content type [application/json;charset=utf-8]
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:118)
	at org.springframework.cloud.openfeign.support.SpringDecoder.decode(SpringDecoder.java:70)
	at org.springframework.cloud.openfeign.support.ResponseEntityDecoder.decode(ResponseEntityDecoder.java:61)
	at feign.optionals.OptionalDecoder.decode(OptionalDecoder.java:36)
	at feign.InvocationContext.decode(InvocationContext.java:114)
	... 97 common frames omitted
Caused by: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `tech.noetzold.dailyAPI.model.WeatherSky` from Array value (token `JsonToken.START_ARRAY`)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:406)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:354)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:103)
	... 101 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `tech.noetzold.dailyAPI.model.WeatherSky` from Array value (token `JsonToken.START_ARRAY`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 52] (through reference chain: tech.noetzold.dailyAPI.model.dto.WeatherResponse["weather"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1752)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1526)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1473)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeFromArray(BeanDeserializer.java:656)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:211)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2105)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1481)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:395)
	... 103 common frames omitted
2024-01-04 12:19:28,867 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2024-01-04 12:19:28,870 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-01-04 12:19:28,994 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2024-01-04 12:19:28,997 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2024-01-04 12:19:29,000 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2024-01-04 12:19:33,006 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] Starting DailyApiApplication using Java 17.0.7 with PID 10948 (C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API\target\classes started by Darlan in C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API)
2024-01-04 12:19:33,009 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] No active profile set, falling back to 1 default profile: "default"
2024-01-04 12:19:33,979 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 12:19:33,981 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-04 12:19:34,124 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 137 ms. Found 9 JPA repository interfaces.
2024-01-04 12:19:34,138 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 12:19:34,140 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-01-04 12:19:34,153 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.AnimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:19:34,154 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.DollarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:19:34,154 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.EmailRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:19:34,154 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:19:34,154 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:19:34,154 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.NewsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:19:34,154 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:19:34,154 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TVShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:19:34,154 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.WeatherPredictRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 12:19:34,154 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-01-04 12:19:34,364 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4b04ba5b-f4a8-3a56-a5c9-3e4a3e7afd5d
2024-01-04 12:19:34,991 WARN io.undertow.websockets.jsr [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2024-01-04 12:19:35,008 INFO io.undertow.servlet [main] Initializing Spring embedded WebApplicationContext
2024-01-04 12:19:35,009 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1959 ms
2024-01-04 12:19:35,526 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2024-01-04 12:19:35,694 INFO com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1a77eb6
2024-01-04 12:19:35,695 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2024-01-04 12:19:35,771 INFO org.flywaydb.core.internal.license.VersionPrinter [main] Flyway Community Edition 9.22.3 by Redgate
2024-01-04 12:19:35,771 INFO org.flywaydb.core.internal.license.VersionPrinter [main] See release notes here: https://rd.gt/416ObMi
2024-01-04 12:19:35,771 INFO org.flywaydb.core.internal.license.VersionPrinter [main] 
2024-01-04 12:19:35,781 INFO org.flywaydb.core.FlywayExecutor [main] Database: jdbc:postgresql://localhost:5432/daily (PostgreSQL 14.5)
2024-01-04 12:19:35,805 INFO org.flywaydb.core.internal.command.DbValidate [main] Successfully validated 0 migrations (execution time 00:00.012s)
2024-01-04 12:19:35,807 WARN org.flywaydb.core.internal.command.DbValidate [main] No migrations found. Are your locations set up correctly?
2024-01-04 12:19:35,853 INFO org.flywaydb.core.internal.command.DbMigrate [main] Current version of schema "public": << Empty Schema >>
2024-01-04 12:19:35,856 INFO org.flywaydb.core.internal.command.DbMigrate [main] Schema "public" is up to date. No migration necessary.
2024-01-04 12:19:35,952 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2024-01-04 12:19:35,997 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 6.3.1.Final
2024-01-04 12:19:36,031 INFO org.hibernate.cache.internal.RegionFactoryInitiator [main] HHH000026: Second-level cache disabled
2024-01-04 12:19:36,256 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [main] No LoadTimeWeaver setup: ignoring JPA class transformer
2024-01-04 12:19:37,252 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-01-04 12:19:37,333 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-01-04 12:19:37,438 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-01-04 12:19:37,756 DEBUG org.hibernate.stat.internal.StatisticsInitiator [main] Statistics initialized [enabled=false]
2024-01-04 12:19:40,639 INFO org.springframework.cloud.commons.util.InetUtils [main] Cannot determine local hostname
2024-01-04 12:19:40,672 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 16 endpoint(s) beneath base path '/actuator'
2024-01-04 12:19:40,741 INFO io.undertow [main] starting server: Undertow - 2.3.10.Final
2024-01-04 12:19:40,750 INFO org.xnio [main] XNIO version 3.8.8.Final
2024-01-04 12:19:40,758 INFO org.xnio.nio [main] XNIO NIO Implementation Version 3.8.8.Final
2024-01-04 12:19:40,816 INFO org.jboss.threads [main] JBoss Threads version 3.5.0.Final
2024-01-04 12:19:40,858 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [main] Undertow started on port 8193 (http)
2024-01-04 12:19:41,846 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-01-04 12:19:41,846 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2024-01-04 12:19:41,847 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 1 ms
2024-01-04 12:19:41,935 INFO org.springframework.cloud.commons.util.InetUtils [main] Cannot determine local hostname
2024-01-04 12:19:41,945 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] Started DailyApiApplication in 10.318 seconds (process running for 10.809)
2024-01-04 12:19:43,463 DEBUG org.hibernate.SQL [XNIO-1 task-2] select nextval('weather_predict_seq')
2024-01-04 12:19:43,482 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into weather_predict (feels_like,grnd_level,humidity,pressure,sea_level,temp,temp_max,temp_min,id) values (?,?,?,?,?,?,?,?,?)
2024-01-04 12:19:43,505 INFO tech.noetzold.dailyAPI.controller.AnimeController [XNIO-1 task-2] Get Weather infos
2024-01-04 13:38:27,697 INFO tech.noetzold.dailyAPI.controller.AnimeController [XNIO-1 task-2] Get Weather infos
2024-01-04 13:41:31,077 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2024-01-04 13:41:31,080 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-01-04 13:41:31,203 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2024-01-04 13:55:05,740 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] Starting DailyApiApplication using Java 17.0.7 with PID 10252 (C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API\target\classes started by Darlan in C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API)
2024-01-04 13:55:05,743 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] No active profile set, falling back to 1 default profile: "default"
2024-01-04 13:55:06,698 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 13:55:06,700 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-04 13:55:06,820 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 114 ms. Found 9 JPA repository interfaces.
2024-01-04 13:55:06,833 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 13:55:06,833 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-01-04 13:55:06,847 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.AnimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:55:06,847 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.DollarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:55:06,847 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.EmailRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:55:06,847 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:55:06,847 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:55:06,847 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.NewsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:55:06,847 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:55:06,847 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TVShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:55:06,847 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.WeatherPredictRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:55:06,847 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-01-04 13:55:07,068 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4b04ba5b-f4a8-3a56-a5c9-3e4a3e7afd5d
2024-01-04 13:55:07,699 WARN io.undertow.websockets.jsr [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2024-01-04 13:55:07,717 INFO io.undertow.servlet [main] Initializing Spring embedded WebApplicationContext
2024-01-04 13:55:07,717 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1935 ms
2024-01-04 13:55:08,199 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2024-01-04 13:55:08,371 INFO com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6315bb4
2024-01-04 13:55:08,372 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2024-01-04 13:55:08,461 INFO org.flywaydb.core.internal.license.VersionPrinter [main] Flyway Community Edition 9.22.3 by Redgate
2024-01-04 13:55:08,461 INFO org.flywaydb.core.internal.license.VersionPrinter [main] See release notes here: https://rd.gt/416ObMi
2024-01-04 13:55:08,461 INFO org.flywaydb.core.internal.license.VersionPrinter [main] 
2024-01-04 13:55:08,472 INFO org.flywaydb.core.FlywayExecutor [main] Database: jdbc:postgresql://localhost:5432/daily (PostgreSQL 14.5)
2024-01-04 13:55:08,502 INFO org.flywaydb.core.internal.command.DbValidate [main] Successfully validated 0 migrations (execution time 00:00.014s)
2024-01-04 13:55:08,502 WARN org.flywaydb.core.internal.command.DbValidate [main] No migrations found. Are your locations set up correctly?
2024-01-04 13:55:08,533 INFO org.flywaydb.core.internal.command.DbMigrate [main] Current version of schema "public": << Empty Schema >>
2024-01-04 13:55:08,535 INFO org.flywaydb.core.internal.command.DbMigrate [main] Schema "public" is up to date. No migration necessary.
2024-01-04 13:55:08,629 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2024-01-04 13:55:08,680 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 6.3.1.Final
2024-01-04 13:55:08,713 INFO org.hibernate.cache.internal.RegionFactoryInitiator [main] HHH000026: Second-level cache disabled
2024-01-04 13:55:08,917 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [main] No LoadTimeWeaver setup: ignoring JPA class transformer
2024-01-04 13:55:09,852 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-01-04 13:55:09,861 DEBUG org.hibernate.SQL [main] alter table if exists anime drop constraint if exists FK6bkluadunhfvh5d9lu8qw2xkc
2024-01-04 13:55:09,867 DEBUG org.hibernate.SQL [main] alter table if exists movie_genre_ids drop constraint if exists FKpf8hdcyxi1qxf0t2jx78w9ruk
2024-01-04 13:55:09,868 DEBUG org.hibernate.SQL [main] alter table if exists tvshow_genre_ids drop constraint if exists FKkstipni8ntcvnf7qyig39ioko
2024-01-04 13:55:09,869 DEBUG org.hibernate.SQL [main] alter table if exists tvshow_origin_country drop constraint if exists FK52epnt0ll9s22ljtcwbu5gs8k
2024-01-04 13:55:09,869 DEBUG org.hibernate.SQL [main] drop table if exists anime cascade
2024-01-04 13:55:09,874 DEBUG org.hibernate.SQL [main] drop table if exists anime_images_response cascade
2024-01-04 13:55:09,877 DEBUG org.hibernate.SQL [main] drop table if exists dollar_value cascade
2024-01-04 13:55:09,880 DEBUG org.hibernate.SQL [main] drop table if exists email cascade
2024-01-04 13:55:09,883 DEBUG org.hibernate.SQL [main] drop table if exists game cascade
2024-01-04 13:55:09,885 DEBUG org.hibernate.SQL [main] drop table if exists jpg_images_response cascade
2024-01-04 13:55:09,887 DEBUG org.hibernate.SQL [main] drop table if exists movie_genre_ids cascade
2024-01-04 13:55:09,887 DEBUG org.hibernate.SQL [main] drop table if exists movies cascade
2024-01-04 13:55:09,890 DEBUG org.hibernate.SQL [main] drop table if exists news cascade
2024-01-04 13:55:09,892 DEBUG org.hibernate.SQL [main] drop table if exists tabnews_response cascade
2024-01-04 13:55:09,894 DEBUG org.hibernate.SQL [main] drop table if exists task cascade
2024-01-04 13:55:09,895 DEBUG org.hibernate.SQL [main] drop table if exists tv_shows cascade
2024-01-04 13:55:09,897 DEBUG org.hibernate.SQL [main] drop table if exists tvshow_genre_ids cascade
2024-01-04 13:55:09,898 DEBUG org.hibernate.SQL [main] drop table if exists tvshow_origin_country cascade
2024-01-04 13:55:09,898 DEBUG org.hibernate.SQL [main] drop table if exists weather_forecast cascade
2024-01-04 13:55:09,900 DEBUG org.hibernate.SQL [main] drop table if exists weather_predict cascade
2024-01-04 13:55:09,902 DEBUG org.hibernate.SQL [main] drop table if exists weather_sky cascade
2024-01-04 13:55:09,904 DEBUG org.hibernate.SQL [main] drop table if exists weather_wind cascade
2024-01-04 13:55:09,905 DEBUG org.hibernate.SQL [main] drop table if exists webp_image_response cascade
2024-01-04 13:55:09,907 DEBUG org.hibernate.SQL [main] drop sequence if exists anime_images_response_seq
2024-01-04 13:55:09,908 DEBUG org.hibernate.SQL [main] drop sequence if exists dollar_value_seq
2024-01-04 13:55:09,910 DEBUG org.hibernate.SQL [main] drop sequence if exists email_seq
2024-01-04 13:55:09,911 DEBUG org.hibernate.SQL [main] drop sequence if exists game_seq
2024-01-04 13:55:09,912 DEBUG org.hibernate.SQL [main] drop sequence if exists jpg_images_response_seq
2024-01-04 13:55:09,913 DEBUG org.hibernate.SQL [main] drop sequence if exists news_seq
2024-01-04 13:55:09,914 DEBUG org.hibernate.SQL [main] drop sequence if exists tabnews_response_seq
2024-01-04 13:55:09,916 DEBUG org.hibernate.SQL [main] drop sequence if exists task_seq
2024-01-04 13:55:09,917 DEBUG org.hibernate.SQL [main] drop sequence if exists weather_forecast_seq
2024-01-04 13:55:09,917 DEBUG org.hibernate.SQL [main] drop sequence if exists weather_predict_seq
2024-01-04 13:55:09,918 DEBUG org.hibernate.SQL [main] drop sequence if exists weather_sky_seq
2024-01-04 13:55:09,919 DEBUG org.hibernate.SQL [main] drop sequence if exists weather_wind_seq
2024-01-04 13:55:09,920 DEBUG org.hibernate.SQL [main] drop sequence if exists webp_image_response_seq
2024-01-04 13:55:09,925 DEBUG org.hibernate.SQL [main] create sequence anime_images_response_seq start with 1 increment by 50
2024-01-04 13:55:09,928 DEBUG org.hibernate.SQL [main] create sequence dollar_value_seq start with 1 increment by 50
2024-01-04 13:55:09,928 DEBUG org.hibernate.SQL [main] create sequence email_seq start with 1 increment by 50
2024-01-04 13:55:09,931 DEBUG org.hibernate.SQL [main] create sequence game_seq start with 1 increment by 50
2024-01-04 13:55:09,932 DEBUG org.hibernate.SQL [main] create sequence jpg_images_response_seq start with 1 increment by 50
2024-01-04 13:55:09,933 DEBUG org.hibernate.SQL [main] create sequence news_seq start with 1 increment by 50
2024-01-04 13:55:09,935 DEBUG org.hibernate.SQL [main] create sequence tabnews_response_seq start with 1 increment by 50
2024-01-04 13:55:09,936 DEBUG org.hibernate.SQL [main] create sequence task_seq start with 1 increment by 50
2024-01-04 13:55:09,937 DEBUG org.hibernate.SQL [main] create sequence weather_forecast_seq start with 1 increment by 50
2024-01-04 13:55:09,938 DEBUG org.hibernate.SQL [main] create sequence weather_predict_seq start with 1 increment by 50
2024-01-04 13:55:09,939 DEBUG org.hibernate.SQL [main] create sequence weather_sky_seq start with 1 increment by 50
2024-01-04 13:55:09,940 DEBUG org.hibernate.SQL [main] create sequence weather_wind_seq start with 1 increment by 50
2024-01-04 13:55:09,941 DEBUG org.hibernate.SQL [main] create sequence webp_image_response_seq start with 1 increment by 50
2024-01-04 13:55:09,944 DEBUG org.hibernate.SQL [main] create table anime (episodes integer, score float(53), year integer, images_id bigint unique, mal_id bigint not null, synopsis varchar(5000), rating varchar(255), season varchar(255), title varchar(255), url varchar(255), primary key (mal_id))
2024-01-04 13:55:09,951 DEBUG org.hibernate.SQL [main] create table anime_images_response (id bigint not null, jpg bytea, webp bytea, primary key (id))
2024-01-04 13:55:09,955 DEBUG org.hibernate.SQL [main] create table dollar_value (ask numeric(38,2), bid numeric(38,2), high numeric(38,2), low numeric(38,2), percent_change numeric(38,2), timestamp numeric(38,2), variation_bid numeric(38,2), id bigint not null, code varchar(255), codein varchar(255), create_date varchar(255), name varchar(255), primary key (id))
2024-01-04 13:55:09,961 DEBUG org.hibernate.SQL [main] create table email (id bigint not null, sent_date timestamp(6), content TEXT, sender varchar(255), subject varchar(255), primary key (id))
2024-01-04 13:55:09,965 DEBUG org.hibernate.SQL [main] create table game (rating float(53), rating_top integer, ratings_count integer, tba boolean, id bigint not null, background_image varchar(255), name varchar(255), released varchar(255), slug varchar(255), primary key (id))
2024-01-04 13:55:09,971 DEBUG org.hibernate.SQL [main] create table jpg_images_response (id bigint not null, image_url varchar(255), large_image_url varchar(255), small_image_url varchar(255), primary key (id))
2024-01-04 13:55:09,975 DEBUG org.hibernate.SQL [main] create table movie_genre_ids (genre_id integer, movie_id bigint not null)
2024-01-04 13:55:09,976 DEBUG org.hibernate.SQL [main] create table movies (adult boolean, popularity float(53), release_date date, video boolean, vote_average float(53), vote_count integer, id bigserial not null, overview varchar(1000), backdrop_path varchar(255), media_type varchar(255), original_language varchar(255), original_title varchar(255), poster_path varchar(255), title varchar(255), primary key (id))
2024-01-04 13:55:09,982 DEBUG org.hibernate.SQL [main] create table news (id bigint not null, description varchar(255), title varchar(255), url varchar(255), primary key (id))
2024-01-04 13:55:09,987 DEBUG org.hibernate.SQL [main] create table tabnews_response (children_deep_count integer, tabcoins integer, id_local bigint not null, created_at varchar(255), deleted_at varchar(255), owner_id varchar(255), owner_username varchar(255), parent_id varchar(255), published_at varchar(255), slug varchar(255), source_url varchar(255), status varchar(255), title varchar(255), updated_at varchar(255), primary key (id_local))
2024-01-04 13:55:09,992 DEBUG org.hibernate.SQL [main] create table task (completed boolean not null, id bigint not null, description varchar(255), primary key (id))
2024-01-04 13:55:09,995 DEBUG org.hibernate.SQL [main] create table tv_shows (first_air_date date, popularity float(53), vote_average float(53), vote_count integer, id bigserial not null, overview varchar(1000), backdrop_path varchar(255), media_type varchar(255), name varchar(255), original_language varchar(255), original_name varchar(255), poster_path varchar(255), primary key (id))
2024-01-04 13:55:10,000 DEBUG org.hibernate.SQL [main] create table tvshow_genre_ids (genre_id integer, tvshow_id bigint not null)
2024-01-04 13:55:10,001 DEBUG org.hibernate.SQL [main] create table tvshow_origin_country (tvshow_id bigint not null, origin_country varchar(255))
2024-01-04 13:55:10,002 DEBUG org.hibernate.SQL [main] create table weather_forecast (temperature float(53), id bigint not null, city varchar(255), description varchar(255), primary key (id))
2024-01-04 13:55:10,005 DEBUG org.hibernate.SQL [main] create table weather_predict (feels_like numeric(38,2), grnd_level integer not null, humidity integer not null, pressure integer not null, sea_level integer not null, temp numeric(38,2), temp_max numeric(38,2), temp_min numeric(38,2), id bigint not null, primary key (id))
2024-01-04 13:55:10,009 DEBUG org.hibernate.SQL [main] create table weather_sky (id bigint not null, description varchar(255), main varchar(255), primary key (id))
2024-01-04 13:55:10,013 DEBUG org.hibernate.SQL [main] create table weather_wind (deg integer, gust float(53), speed float(53), id bigint not null, primary key (id))
2024-01-04 13:55:10,015 DEBUG org.hibernate.SQL [main] create table webp_image_response (id bigint not null, image_url varchar(255), large_image_url varchar(255), small_image_url varchar(255), primary key (id))
2024-01-04 13:55:10,020 DEBUG org.hibernate.SQL [main] alter table if exists anime add constraint FK6bkluadunhfvh5d9lu8qw2xkc foreign key (images_id) references anime_images_response
2024-01-04 13:55:10,026 DEBUG org.hibernate.SQL [main] alter table if exists movie_genre_ids add constraint FKpf8hdcyxi1qxf0t2jx78w9ruk foreign key (movie_id) references movies
2024-01-04 13:55:10,027 DEBUG org.hibernate.SQL [main] alter table if exists tvshow_genre_ids add constraint FKkstipni8ntcvnf7qyig39ioko foreign key (tvshow_id) references tv_shows
2024-01-04 13:55:10,028 DEBUG org.hibernate.SQL [main] alter table if exists tvshow_origin_country add constraint FK52epnt0ll9s22ljtcwbu5gs8k foreign key (tvshow_id) references tv_shows
2024-01-04 13:55:10,030 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-01-04 13:55:10,165 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-01-04 13:55:10,484 DEBUG org.hibernate.stat.internal.StatisticsInitiator [main] Statistics initialized [enabled=false]
2024-01-04 13:55:10,944 WARN org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'weatherPredictController': Unsatisfied dependency expressed through field 'weatherPredictService': Error creating bean with name 'weatherPredictService': Unsatisfied dependency expressed through field 'weatherPredictRepository': Error creating bean with name 'weatherPredictRepository' defined in tech.noetzold.dailyAPI.repository.WeatherPredictRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Not a managed type: class tech.noetzold.dailyAPI.model.dto.WeatherResponse
2024-01-04 13:55:10,945 WARN org.springframework.context.annotation.AnnotationConfigApplicationContext [main] Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'applicationTaskExecutor': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:265)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:222)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:144)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:445)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1069)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1037)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:113)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1200)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1193)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1125)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:628)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at tech.noetzold.dailyAPI.DailyApiApplication.main(DailyApiApplication.java:14)
2024-01-04 13:55:10,948 WARN org.springframework.context.annotation.AnnotationConfigApplicationContext [main] Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'applicationTaskExecutor': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:265)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:222)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:144)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:445)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1069)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1037)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:113)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1200)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1193)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1125)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:628)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at tech.noetzold.dailyAPI.DailyApiApplication.main(DailyApiApplication.java:14)
2024-01-04 13:55:10,948 WARN org.springframework.context.annotation.AnnotationConfigApplicationContext [main] Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'applicationTaskExecutor': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:265)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:222)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:144)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:445)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1069)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1037)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:113)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1200)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1193)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1125)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:628)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at tech.noetzold.dailyAPI.DailyApiApplication.main(DailyApiApplication.java:14)
2024-01-04 13:55:10,948 WARN org.springframework.context.annotation.AnnotationConfigApplicationContext [main] Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'applicationTaskExecutor': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:265)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:222)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:144)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:445)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1069)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1037)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:113)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1200)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1193)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1125)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:628)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at tech.noetzold.dailyAPI.DailyApiApplication.main(DailyApiApplication.java:14)
2024-01-04 13:55:10,948 WARN org.springframework.context.annotation.AnnotationConfigApplicationContext [main] Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'applicationTaskExecutor': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:265)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:222)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:144)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:445)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1069)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1037)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:113)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1200)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1193)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1125)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:628)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at tech.noetzold.dailyAPI.DailyApiApplication.main(DailyApiApplication.java:14)
2024-01-04 13:55:10,949 WARN org.springframework.context.annotation.AnnotationConfigApplicationContext [main] Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'applicationTaskExecutor': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:265)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:222)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:144)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:445)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1069)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1037)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:113)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1200)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1193)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1125)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:628)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at tech.noetzold.dailyAPI.DailyApiApplication.main(DailyApiApplication.java:14)
2024-01-04 13:55:10,949 WARN org.springframework.context.annotation.AnnotationConfigApplicationContext [main] Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'applicationTaskExecutor': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:265)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:222)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:144)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:445)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1069)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1037)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:113)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1200)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1193)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1125)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:628)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at tech.noetzold.dailyAPI.DailyApiApplication.main(DailyApiApplication.java:14)
2024-01-04 13:55:10,949 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2024-01-04 13:55:10,952 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2024-01-04 13:55:10,954 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2024-01-04 13:55:10,975 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [main] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-01-04 13:55:10,995 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'weatherPredictController': Unsatisfied dependency expressed through field 'weatherPredictService': Error creating bean with name 'weatherPredictService': Unsatisfied dependency expressed through field 'weatherPredictRepository': Error creating bean with name 'weatherPredictRepository' defined in tech.noetzold.dailyAPI.repository.WeatherPredictRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Not a managed type: class tech.noetzold.dailyAPI.model.dto.WeatherResponse
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:772)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:752)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:493)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:946)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at tech.noetzold.dailyAPI.DailyApiApplication.main(DailyApiApplication.java:14)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'weatherPredictService': Unsatisfied dependency expressed through field 'weatherPredictRepository': Error creating bean with name 'weatherPredictRepository' defined in tech.noetzold.dailyAPI.repository.WeatherPredictRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Not a managed type: class tech.noetzold.dailyAPI.model.dto.WeatherResponse
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:772)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:752)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:493)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:769)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'weatherPredictRepository' defined in tech.noetzold.dailyAPI.repository.WeatherPredictRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Not a managed type: class tech.noetzold.dailyAPI.model.dto.WeatherResponse
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:769)
	... 34 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class tech.noetzold.dailyAPI.model.dto.WeatherResponse
	at org.hibernate.metamodel.model.domain.internal.JpaMetamodelImpl.managedType(JpaMetamodelImpl.java:193)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.managedType(MappingMetamodelImpl.java:463)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.managedType(MappingMetamodelImpl.java:97)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:82)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:69)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:246)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:211)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:194)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:81)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:317)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 44 common frames omitted
2024-01-04 13:58:28,849 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] Starting DailyApiApplication using Java 17.0.7 with PID 20492 (C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API\target\classes started by Darlan in C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API)
2024-01-04 13:58:28,852 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] No active profile set, falling back to 1 default profile: "default"
2024-01-04 13:58:29,834 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 13:58:29,835 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-04 13:58:29,963 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 121 ms. Found 9 JPA repository interfaces.
2024-01-04 13:58:29,980 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 13:58:29,981 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-01-04 13:58:29,993 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.AnimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:58:29,994 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.DollarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:58:29,994 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.EmailRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:58:29,994 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:58:29,994 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:58:29,994 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.NewsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:58:29,994 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:58:29,994 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TVShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:58:29,994 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.WeatherPredictRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 13:58:29,995 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-01-04 13:58:30,187 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4b04ba5b-f4a8-3a56-a5c9-3e4a3e7afd5d
2024-01-04 13:58:30,836 WARN io.undertow.websockets.jsr [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2024-01-04 13:58:30,854 INFO io.undertow.servlet [main] Initializing Spring embedded WebApplicationContext
2024-01-04 13:58:30,854 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1955 ms
2024-01-04 13:58:31,365 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2024-01-04 13:58:31,535 INFO com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2db3675a
2024-01-04 13:58:31,536 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2024-01-04 13:58:31,612 INFO org.flywaydb.core.internal.license.VersionPrinter [main] Flyway Community Edition 9.22.3 by Redgate
2024-01-04 13:58:31,612 INFO org.flywaydb.core.internal.license.VersionPrinter [main] See release notes here: https://rd.gt/416ObMi
2024-01-04 13:58:31,612 INFO org.flywaydb.core.internal.license.VersionPrinter [main] 
2024-01-04 13:58:31,625 INFO org.flywaydb.core.FlywayExecutor [main] Database: jdbc:postgresql://localhost:5432/daily (PostgreSQL 14.5)
2024-01-04 13:58:31,653 INFO org.flywaydb.core.internal.command.DbValidate [main] Successfully validated 0 migrations (execution time 00:00.013s)
2024-01-04 13:58:31,653 WARN org.flywaydb.core.internal.command.DbValidate [main] No migrations found. Are your locations set up correctly?
2024-01-04 13:58:31,696 INFO org.flywaydb.core.internal.command.DbMigrate [main] Current version of schema "public": << Empty Schema >>
2024-01-04 13:58:31,700 INFO org.flywaydb.core.internal.command.DbMigrate [main] Schema "public" is up to date. No migration necessary.
2024-01-04 13:58:31,789 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2024-01-04 13:58:31,841 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 6.3.1.Final
2024-01-04 13:58:31,873 INFO org.hibernate.cache.internal.RegionFactoryInitiator [main] HHH000026: Second-level cache disabled
2024-01-04 13:58:32,074 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [main] No LoadTimeWeaver setup: ignoring JPA class transformer
2024-01-04 13:58:32,275 ERROR org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Failed to initialize JPA EntityManagerFactory: Entity 'tech.noetzold.dailyAPI.model.dto.WeatherResponse' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
2024-01-04 13:58:32,276 WARN org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity 'tech.noetzold.dailyAPI.model.dto.WeatherResponse' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
2024-01-04 13:58:32,276 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2024-01-04 13:58:32,279 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2024-01-04 13:58:32,302 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [main] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-01-04 13:58:32,315 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity 'tech.noetzold.dailyAPI.model.dto.WeatherResponse' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at tech.noetzold.dailyAPI.DailyApiApplication.main(DailyApiApplication.java:14)
Caused by: org.hibernate.AnnotationException: Entity 'tech.noetzold.dailyAPI.model.dto.WeatherResponse' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.hibernate.boot.model.internal.InheritanceState.determineDefaultAccessType(InheritanceState.java:279)
	at org.hibernate.boot.model.internal.InheritanceState.getElementsToProcess(InheritanceState.java:215)
	at org.hibernate.boot.model.internal.InheritanceState.postProcess(InheritanceState.java:160)
	at org.hibernate.boot.model.internal.EntityBinder.handleIdentifier(EntityBinder.java:296)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:231)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 16 common frames omitted
2024-01-04 14:01:45,421 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] Starting DailyApiApplication using Java 17.0.7 with PID 22932 (C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API\target\classes started by Darlan in C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API)
2024-01-04 14:01:45,423 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] No active profile set, falling back to 1 default profile: "default"
2024-01-04 14:01:46,386 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 14:01:46,387 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-04 14:01:46,523 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 129 ms. Found 9 JPA repository interfaces.
2024-01-04 14:01:46,536 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 14:01:46,537 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-01-04 14:01:46,552 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.AnimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:01:46,552 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.DollarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:01:46,552 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.EmailRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:01:46,552 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:01:46,552 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:01:46,552 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.NewsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:01:46,552 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:01:46,552 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TVShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:01:46,552 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.WeatherPredictRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:01:46,553 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-01-04 14:01:46,771 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4b04ba5b-f4a8-3a56-a5c9-3e4a3e7afd5d
2024-01-04 14:01:47,377 WARN io.undertow.websockets.jsr [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2024-01-04 14:01:47,400 INFO io.undertow.servlet [main] Initializing Spring embedded WebApplicationContext
2024-01-04 14:01:47,400 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1934 ms
2024-01-04 14:01:47,866 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2024-01-04 14:01:48,033 INFO com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1fcc3461
2024-01-04 14:01:48,035 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2024-01-04 14:01:48,099 INFO org.flywaydb.core.internal.license.VersionPrinter [main] Flyway Community Edition 9.22.3 by Redgate
2024-01-04 14:01:48,099 INFO org.flywaydb.core.internal.license.VersionPrinter [main] See release notes here: https://rd.gt/416ObMi
2024-01-04 14:01:48,099 INFO org.flywaydb.core.internal.license.VersionPrinter [main] 
2024-01-04 14:01:48,108 INFO org.flywaydb.core.FlywayExecutor [main] Database: jdbc:postgresql://localhost:5432/daily (PostgreSQL 14.5)
2024-01-04 14:01:48,132 INFO org.flywaydb.core.internal.command.DbValidate [main] Successfully validated 0 migrations (execution time 00:00.011s)
2024-01-04 14:01:48,132 WARN org.flywaydb.core.internal.command.DbValidate [main] No migrations found. Are your locations set up correctly?
2024-01-04 14:01:48,187 INFO org.flywaydb.core.internal.command.DbMigrate [main] Current version of schema "public": << Empty Schema >>
2024-01-04 14:01:48,189 INFO org.flywaydb.core.internal.command.DbMigrate [main] Schema "public" is up to date. No migration necessary.
2024-01-04 14:01:48,277 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2024-01-04 14:01:48,322 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 6.3.1.Final
2024-01-04 14:01:48,358 INFO org.hibernate.cache.internal.RegionFactoryInitiator [main] HHH000026: Second-level cache disabled
2024-01-04 14:01:48,574 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [main] No LoadTimeWeaver setup: ignoring JPA class transformer
2024-01-04 14:01:49,479 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-01-04 14:01:49,487 DEBUG org.hibernate.SQL [main] alter table if exists anime drop constraint if exists FK6bkluadunhfvh5d9lu8qw2xkc
2024-01-04 14:01:49,491 DEBUG org.hibernate.SQL [main] alter table if exists movie_genre_ids drop constraint if exists FKpf8hdcyxi1qxf0t2jx78w9ruk
2024-01-04 14:01:49,491 DEBUG org.hibernate.SQL [main] alter table if exists tvshow_genre_ids drop constraint if exists FKkstipni8ntcvnf7qyig39ioko
2024-01-04 14:01:49,492 DEBUG org.hibernate.SQL [main] alter table if exists tvshow_origin_country drop constraint if exists FK52epnt0ll9s22ljtcwbu5gs8k
2024-01-04 14:01:49,493 DEBUG org.hibernate.SQL [main] drop table if exists anime cascade
2024-01-04 14:01:49,496 DEBUG org.hibernate.SQL [main] drop table if exists anime_images_response cascade
2024-01-04 14:01:49,497 DEBUG org.hibernate.SQL [main] drop table if exists dollar_value cascade
2024-01-04 14:01:49,499 DEBUG org.hibernate.SQL [main] drop table if exists email cascade
2024-01-04 14:01:49,500 DEBUG org.hibernate.SQL [main] drop table if exists game cascade
2024-01-04 14:01:49,502 DEBUG org.hibernate.SQL [main] drop table if exists jpg_images_response cascade
2024-01-04 14:01:49,504 DEBUG org.hibernate.SQL [main] drop table if exists movie_genre_ids cascade
2024-01-04 14:01:49,505 DEBUG org.hibernate.SQL [main] drop table if exists movies cascade
2024-01-04 14:01:49,507 DEBUG org.hibernate.SQL [main] drop table if exists news cascade
2024-01-04 14:01:49,509 DEBUG org.hibernate.SQL [main] drop table if exists tabnews_response cascade
2024-01-04 14:01:49,511 DEBUG org.hibernate.SQL [main] drop table if exists task cascade
2024-01-04 14:01:49,513 DEBUG org.hibernate.SQL [main] drop table if exists tv_shows cascade
2024-01-04 14:01:49,515 DEBUG org.hibernate.SQL [main] drop table if exists tvshow_genre_ids cascade
2024-01-04 14:01:49,516 DEBUG org.hibernate.SQL [main] drop table if exists tvshow_origin_country cascade
2024-01-04 14:01:49,516 DEBUG org.hibernate.SQL [main] drop table if exists weather_forecast cascade
2024-01-04 14:01:49,517 DEBUG org.hibernate.SQL [main] drop table if exists weather_predict cascade
2024-01-04 14:01:49,519 DEBUG org.hibernate.SQL [main] drop table if exists weather_response cascade
2024-01-04 14:01:49,521 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] SQL Warning Code: 0, SQLState: 00000
2024-01-04 14:01:49,521 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] table "weather_response" does not exist, skipping
2024-01-04 14:01:49,521 DEBUG org.hibernate.SQL [main] drop table if exists weather_sky cascade
2024-01-04 14:01:49,524 DEBUG org.hibernate.SQL [main] drop table if exists weather_wind cascade
2024-01-04 14:01:49,524 DEBUG org.hibernate.SQL [main] drop table if exists webp_image_response cascade
2024-01-04 14:01:49,526 DEBUG org.hibernate.SQL [main] drop sequence if exists anime_images_response_seq
2024-01-04 14:01:49,527 DEBUG org.hibernate.SQL [main] drop sequence if exists dollar_value_seq
2024-01-04 14:01:49,529 DEBUG org.hibernate.SQL [main] drop sequence if exists email_seq
2024-01-04 14:01:49,530 DEBUG org.hibernate.SQL [main] drop sequence if exists game_seq
2024-01-04 14:01:49,532 DEBUG org.hibernate.SQL [main] drop sequence if exists jpg_images_response_seq
2024-01-04 14:01:49,533 DEBUG org.hibernate.SQL [main] drop sequence if exists news_seq
2024-01-04 14:01:49,534 DEBUG org.hibernate.SQL [main] drop sequence if exists tabnews_response_seq
2024-01-04 14:01:49,535 DEBUG org.hibernate.SQL [main] drop sequence if exists task_seq
2024-01-04 14:01:49,536 DEBUG org.hibernate.SQL [main] drop sequence if exists weather_forecast_seq
2024-01-04 14:01:49,537 DEBUG org.hibernate.SQL [main] drop sequence if exists weather_predict_seq
2024-01-04 14:01:49,538 DEBUG org.hibernate.SQL [main] drop sequence if exists weather_response_seq
2024-01-04 14:01:49,538 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] SQL Warning Code: 0, SQLState: 00000
2024-01-04 14:01:49,538 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] sequence "weather_response_seq" does not exist, skipping
2024-01-04 14:01:49,538 DEBUG org.hibernate.SQL [main] drop sequence if exists weather_sky_seq
2024-01-04 14:01:49,539 DEBUG org.hibernate.SQL [main] drop sequence if exists weather_wind_seq
2024-01-04 14:01:49,540 DEBUG org.hibernate.SQL [main] drop sequence if exists webp_image_response_seq
2024-01-04 14:01:49,545 DEBUG org.hibernate.SQL [main] create sequence anime_images_response_seq start with 1 increment by 50
2024-01-04 14:01:49,548 DEBUG org.hibernate.SQL [main] create sequence dollar_value_seq start with 1 increment by 50
2024-01-04 14:01:49,549 DEBUG org.hibernate.SQL [main] create sequence email_seq start with 1 increment by 50
2024-01-04 14:01:49,550 DEBUG org.hibernate.SQL [main] create sequence game_seq start with 1 increment by 50
2024-01-04 14:01:49,551 DEBUG org.hibernate.SQL [main] create sequence jpg_images_response_seq start with 1 increment by 50
2024-01-04 14:01:49,552 DEBUG org.hibernate.SQL [main] create sequence news_seq start with 1 increment by 50
2024-01-04 14:01:49,554 DEBUG org.hibernate.SQL [main] create sequence tabnews_response_seq start with 1 increment by 50
2024-01-04 14:01:49,555 DEBUG org.hibernate.SQL [main] create sequence task_seq start with 1 increment by 50
2024-01-04 14:01:49,556 DEBUG org.hibernate.SQL [main] create sequence weather_forecast_seq start with 1 increment by 50
2024-01-04 14:01:49,557 DEBUG org.hibernate.SQL [main] create sequence weather_predict_seq start with 1 increment by 50
2024-01-04 14:01:49,557 DEBUG org.hibernate.SQL [main] create sequence weather_response_seq start with 1 increment by 50
2024-01-04 14:01:49,558 DEBUG org.hibernate.SQL [main] create sequence weather_sky_seq start with 1 increment by 50
2024-01-04 14:01:49,559 DEBUG org.hibernate.SQL [main] create sequence weather_wind_seq start with 1 increment by 50
2024-01-04 14:01:49,560 DEBUG org.hibernate.SQL [main] create sequence webp_image_response_seq start with 1 increment by 50
2024-01-04 14:01:49,564 DEBUG org.hibernate.SQL [main] create table anime (episodes integer, score float(53), year integer, images_id bigint unique, mal_id bigint not null, synopsis varchar(5000), rating varchar(255), season varchar(255), title varchar(255), url varchar(255), primary key (mal_id))
2024-01-04 14:01:49,574 DEBUG org.hibernate.SQL [main] create table anime_images_response (id bigint not null, jpg bytea, webp bytea, primary key (id))
2024-01-04 14:01:49,578 DEBUG org.hibernate.SQL [main] create table dollar_value (ask numeric(38,2), bid numeric(38,2), high numeric(38,2), low numeric(38,2), percent_change numeric(38,2), timestamp numeric(38,2), variation_bid numeric(38,2), id bigint not null, code varchar(255), codein varchar(255), create_date varchar(255), name varchar(255), primary key (id))
2024-01-04 14:01:49,583 DEBUG org.hibernate.SQL [main] create table email (id bigint not null, sent_date timestamp(6), content TEXT, sender varchar(255), subject varchar(255), primary key (id))
2024-01-04 14:01:49,587 DEBUG org.hibernate.SQL [main] create table game (rating float(53), rating_top integer, ratings_count integer, tba boolean, id bigint not null, background_image varchar(255), name varchar(255), released varchar(255), slug varchar(255), primary key (id))
2024-01-04 14:01:49,591 DEBUG org.hibernate.SQL [main] create table jpg_images_response (id bigint not null, image_url varchar(255), large_image_url varchar(255), small_image_url varchar(255), primary key (id))
2024-01-04 14:01:49,594 DEBUG org.hibernate.SQL [main] create table movie_genre_ids (genre_id integer, movie_id bigint not null)
2024-01-04 14:01:49,596 DEBUG org.hibernate.SQL [main] create table movies (adult boolean, popularity float(53), release_date date, video boolean, vote_average float(53), vote_count integer, id bigserial not null, overview varchar(1000), backdrop_path varchar(255), media_type varchar(255), original_language varchar(255), original_title varchar(255), poster_path varchar(255), title varchar(255), primary key (id))
2024-01-04 14:01:49,602 DEBUG org.hibernate.SQL [main] create table news (id bigint not null, description varchar(255), title varchar(255), url varchar(255), primary key (id))
2024-01-04 14:01:49,607 DEBUG org.hibernate.SQL [main] create table tabnews_response (children_deep_count integer, tabcoins integer, id_local bigint not null, created_at varchar(255), deleted_at varchar(255), owner_id varchar(255), owner_username varchar(255), parent_id varchar(255), published_at varchar(255), slug varchar(255), source_url varchar(255), status varchar(255), title varchar(255), updated_at varchar(255), primary key (id_local))
2024-01-04 14:01:49,612 DEBUG org.hibernate.SQL [main] create table task (completed boolean not null, id bigint not null, description varchar(255), primary key (id))
2024-01-04 14:01:49,614 DEBUG org.hibernate.SQL [main] create table tv_shows (first_air_date date, popularity float(53), vote_average float(53), vote_count integer, id bigserial not null, overview varchar(1000), backdrop_path varchar(255), media_type varchar(255), name varchar(255), original_language varchar(255), original_name varchar(255), poster_path varchar(255), primary key (id))
2024-01-04 14:01:49,619 DEBUG org.hibernate.SQL [main] create table tvshow_genre_ids (genre_id integer, tvshow_id bigint not null)
2024-01-04 14:01:49,620 DEBUG org.hibernate.SQL [main] create table tvshow_origin_country (tvshow_id bigint not null, origin_country varchar(255))
2024-01-04 14:01:49,620 DEBUG org.hibernate.SQL [main] create table weather_forecast (temperature float(53), id bigint not null, city varchar(255), description varchar(255), primary key (id))
2024-01-04 14:01:49,623 DEBUG org.hibernate.SQL [main] create table weather_predict (feels_like numeric(38,2), grnd_level integer not null, humidity integer not null, pressure integer not null, sea_level integer not null, temp numeric(38,2), temp_max numeric(38,2), temp_min numeric(38,2), id bigint not null, primary key (id))
2024-01-04 14:01:49,630 ERROR org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Error creating SQL 'create' commands for table 'weather_response' [Unable to determine SQL type name for column 'weather' of table 'weather_response': class org.hibernate.type.internal.BasicTypeImpl cannot be cast to class org.hibernate.type.BasicPluralType (org.hibernate.type.internal.BasicTypeImpl and org.hibernate.type.BasicPluralType are in unnamed module of loader 'app')]
2024-01-04 14:01:49,630 WARN org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Error creating SQL 'create' commands for table 'weather_response' [Unable to determine SQL type name for column 'weather' of table 'weather_response': class org.hibernate.type.internal.BasicTypeImpl cannot be cast to class org.hibernate.type.BasicPluralType (org.hibernate.type.internal.BasicTypeImpl and org.hibernate.type.BasicPluralType are in unnamed module of loader 'app')]
2024-01-04 14:01:49,630 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2024-01-04 14:01:49,633 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2024-01-04 14:01:49,652 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [main] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-01-04 14:01:49,666 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Error creating SQL 'create' commands for table 'weather_response' [Unable to determine SQL type name for column 'weather' of table 'weather_response': class org.hibernate.type.internal.BasicTypeImpl cannot be cast to class org.hibernate.type.BasicPluralType (org.hibernate.type.internal.BasicTypeImpl and org.hibernate.type.BasicPluralType are in unnamed module of loader 'app')]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at tech.noetzold.dailyAPI.DailyApiApplication.main(DailyApiApplication.java:14)
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Error creating SQL 'create' commands for table 'weather_response' [Unable to determine SQL type name for column 'weather' of table 'weather_response': class org.hibernate.type.internal.BasicTypeImpl cannot be cast to class org.hibernate.type.BasicPluralType (org.hibernate.type.internal.BasicTypeImpl and org.hibernate.type.BasicPluralType are in unnamed module of loader 'app')]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 16 common frames omitted
Caused by: org.hibernate.MappingException: Error creating SQL 'create' commands for table 'weather_response' [Unable to determine SQL type name for column 'weather' of table 'weather_response': class org.hibernate.type.internal.BasicTypeImpl cannot be cast to class org.hibernate.type.BasicPluralType (org.hibernate.type.internal.BasicTypeImpl and org.hibernate.type.BasicPluralType are in unnamed module of loader 'app')]
	at org.hibernate.tool.schema.internal.StandardTableExporter.getSqlCreateStrings(StandardTableExporter.java:121)
	at org.hibernate.tool.schema.internal.StandardTableExporter.getSqlCreateStrings(StandardTableExporter.java:41)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:421)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 20 common frames omitted
Caused by: org.hibernate.MappingException: Unable to determine SQL type name for column 'weather' of table 'weather_response': class org.hibernate.type.internal.BasicTypeImpl cannot be cast to class org.hibernate.type.BasicPluralType (org.hibernate.type.internal.BasicTypeImpl and org.hibernate.type.BasicPluralType are in unnamed module of loader 'app')
	at org.hibernate.mapping.Column.getSqlTypeName(Column.java:296)
	at org.hibernate.mapping.Column.getSqlType(Column.java:355)
	at org.hibernate.tool.schema.internal.ColumnDefinitions.appendColumnDefinition(ColumnDefinitions.java:181)
	at org.hibernate.tool.schema.internal.ColumnDefinitions.appendColumn(ColumnDefinitions.java:104)
	at org.hibernate.tool.schema.internal.StandardTableExporter.getSqlCreateStrings(StandardTableExporter.java:84)
	... 39 common frames omitted
Caused by: java.lang.ClassCastException: class org.hibernate.type.internal.BasicTypeImpl cannot be cast to class org.hibernate.type.BasicPluralType (org.hibernate.type.internal.BasicTypeImpl and org.hibernate.type.BasicPluralType are in unnamed module of loader 'app')
	at org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl.getTypeName(ArrayDdlTypeImpl.java:30)
	at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.getTypeName(DdlTypeRegistry.java:225)
	at org.hibernate.mapping.Column.getSqlTypeName(Column.java:288)
	... 43 common frames omitted
2024-01-04 14:07:55,112 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] Starting DailyApiApplication using Java 17.0.7 with PID 19356 (C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API\target\classes started by Darlan in C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API)
2024-01-04 14:07:55,115 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] No active profile set, falling back to 1 default profile: "default"
2024-01-04 14:07:56,071 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 14:07:56,072 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-04 14:07:56,224 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 142 ms. Found 9 JPA repository interfaces.
2024-01-04 14:07:56,239 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 14:07:56,239 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-01-04 14:07:56,252 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.AnimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:07:56,252 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.DollarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:07:56,252 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.EmailRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:07:56,252 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:07:56,252 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:07:56,253 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.NewsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:07:56,253 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:07:56,253 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TVShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:07:56,253 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.WeatherPredictRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:07:56,253 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-01-04 14:07:56,459 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4b04ba5b-f4a8-3a56-a5c9-3e4a3e7afd5d
2024-01-04 14:07:57,139 WARN io.undertow.websockets.jsr [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2024-01-04 14:07:57,152 INFO io.undertow.servlet [main] Initializing Spring embedded WebApplicationContext
2024-01-04 14:07:57,152 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1996 ms
2024-01-04 14:07:57,639 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2024-01-04 14:07:57,817 INFO com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6212ea52
2024-01-04 14:07:57,819 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2024-01-04 14:07:57,898 INFO org.flywaydb.core.internal.license.VersionPrinter [main] Flyway Community Edition 9.22.3 by Redgate
2024-01-04 14:07:57,898 INFO org.flywaydb.core.internal.license.VersionPrinter [main] See release notes here: https://rd.gt/416ObMi
2024-01-04 14:07:57,898 INFO org.flywaydb.core.internal.license.VersionPrinter [main] 
2024-01-04 14:07:57,910 INFO org.flywaydb.core.FlywayExecutor [main] Database: jdbc:postgresql://localhost:5432/daily (PostgreSQL 14.5)
2024-01-04 14:07:57,938 INFO org.flywaydb.core.internal.command.DbValidate [main] Successfully validated 0 migrations (execution time 00:00.013s)
2024-01-04 14:07:57,938 WARN org.flywaydb.core.internal.command.DbValidate [main] No migrations found. Are your locations set up correctly?
2024-01-04 14:07:57,970 INFO org.flywaydb.core.internal.command.DbMigrate [main] Current version of schema "public": << Empty Schema >>
2024-01-04 14:07:57,972 INFO org.flywaydb.core.internal.command.DbMigrate [main] Schema "public" is up to date. No migration necessary.
2024-01-04 14:07:58,053 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2024-01-04 14:07:58,103 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 6.3.1.Final
2024-01-04 14:07:58,135 INFO org.hibernate.cache.internal.RegionFactoryInitiator [main] HHH000026: Second-level cache disabled
2024-01-04 14:07:58,340 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [main] No LoadTimeWeaver setup: ignoring JPA class transformer
2024-01-04 14:07:58,587 ERROR org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Failed to initialize JPA EntityManagerFactory: Collection 'tech.noetzold.dailyAPI.model.dto.WeatherResponse.weather' is 'mappedBy' a property named 'weatherReport' which does not exist in the target entity 'tech.noetzold.dailyAPI.model.WeatherSky'
2024-01-04 14:07:58,588 WARN org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'tech.noetzold.dailyAPI.model.dto.WeatherResponse.weather' is 'mappedBy' a property named 'weatherReport' which does not exist in the target entity 'tech.noetzold.dailyAPI.model.WeatherSky'
2024-01-04 14:07:58,588 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2024-01-04 14:07:58,591 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2024-01-04 14:07:58,613 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [main] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-01-04 14:07:58,625 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'tech.noetzold.dailyAPI.model.dto.WeatherResponse.weather' is 'mappedBy' a property named 'weatherReport' which does not exist in the target entity 'tech.noetzold.dailyAPI.model.WeatherSky'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at tech.noetzold.dailyAPI.DailyApiApplication.main(DailyApiApplication.java:14)
Caused by: org.hibernate.AnnotationException: Collection 'tech.noetzold.dailyAPI.model.dto.WeatherResponse.weather' is 'mappedBy' a property named 'weatherReport' which does not exist in the target entity 'tech.noetzold.dailyAPI.model.WeatherSky'
	at org.hibernate.boot.model.internal.CollectionBinder.isReversePropertyInJoin(CollectionBinder.java:1611)
	at org.hibernate.boot.model.internal.CollectionBinder.noAssociationTable(CollectionBinder.java:1625)
	at org.hibernate.boot.model.internal.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:1586)
	at org.hibernate.boot.model.internal.CollectionBinder$1.secondPass(CollectionBinder.java:1577)
	at org.hibernate.boot.model.internal.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1815)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1774)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:331)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 16 common frames omitted
2024-01-04 14:09:34,105 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] Starting DailyApiApplication using Java 17.0.7 with PID 5204 (C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API\target\classes started by Darlan in C:\Users\Usu치rio\Documents\Projetos\GitHub\daily-API)
2024-01-04 14:09:34,108 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] No active profile set, falling back to 1 default profile: "default"
2024-01-04 14:09:35,053 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 14:09:35,054 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-04 14:09:35,196 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 135 ms. Found 9 JPA repository interfaces.
2024-01-04 14:09:35,212 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-04 14:09:35,213 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-01-04 14:09:35,228 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.AnimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:09:35,228 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.DollarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:09:35,228 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.EmailRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:09:35,228 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:09:35,228 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:09:35,229 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.NewsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:09:35,229 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:09:35,229 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.TVShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:09:35,229 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [main] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.dailyAPI.repository.WeatherPredictRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-01-04 14:09:35,229 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-01-04 14:09:35,451 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4b04ba5b-f4a8-3a56-a5c9-3e4a3e7afd5d
2024-01-04 14:09:36,079 WARN io.undertow.websockets.jsr [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2024-01-04 14:09:36,095 INFO io.undertow.servlet [main] Initializing Spring embedded WebApplicationContext
2024-01-04 14:09:36,095 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1947 ms
2024-01-04 14:09:36,618 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2024-01-04 14:09:36,793 INFO com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@64508788
2024-01-04 14:09:36,795 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2024-01-04 14:09:36,874 INFO org.flywaydb.core.internal.license.VersionPrinter [main] Flyway Community Edition 9.22.3 by Redgate
2024-01-04 14:09:36,874 INFO org.flywaydb.core.internal.license.VersionPrinter [main] See release notes here: https://rd.gt/416ObMi
2024-01-04 14:09:36,874 INFO org.flywaydb.core.internal.license.VersionPrinter [main] 
2024-01-04 14:09:36,887 INFO org.flywaydb.core.FlywayExecutor [main] Database: jdbc:postgresql://localhost:5432/daily (PostgreSQL 14.5)
2024-01-04 14:09:36,914 INFO org.flywaydb.core.internal.command.DbValidate [main] Successfully validated 0 migrations (execution time 00:00.013s)
2024-01-04 14:09:36,915 WARN org.flywaydb.core.internal.command.DbValidate [main] No migrations found. Are your locations set up correctly?
2024-01-04 14:09:36,940 INFO org.flywaydb.core.internal.command.DbMigrate [main] Current version of schema "public": << Empty Schema >>
2024-01-04 14:09:36,943 INFO org.flywaydb.core.internal.command.DbMigrate [main] Schema "public" is up to date. No migration necessary.
2024-01-04 14:09:37,026 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2024-01-04 14:09:37,077 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 6.3.1.Final
2024-01-04 14:09:37,109 INFO org.hibernate.cache.internal.RegionFactoryInitiator [main] HHH000026: Second-level cache disabled
2024-01-04 14:09:37,332 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [main] No LoadTimeWeaver setup: ignoring JPA class transformer
2024-01-04 14:09:38,454 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-01-04 14:09:38,464 DEBUG org.hibernate.SQL [main] alter table if exists anime drop constraint if exists FK6bkluadunhfvh5d9lu8qw2xkc
2024-01-04 14:09:38,466 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] SQL Warning Code: 0, SQLState: 00000
2024-01-04 14:09:38,467 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] constraint "fk6bkluadunhfvh5d9lu8qw2xkc" of relation "anime" does not exist, skipping
2024-01-04 14:09:38,467 DEBUG org.hibernate.SQL [main] alter table if exists movie_genre_ids drop constraint if exists FKpf8hdcyxi1qxf0t2jx78w9ruk
2024-01-04 14:09:38,467 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] SQL Warning Code: 0, SQLState: 00000
2024-01-04 14:09:38,467 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] constraint "fkpf8hdcyxi1qxf0t2jx78w9ruk" of relation "movie_genre_ids" does not exist, skipping
2024-01-04 14:09:38,467 DEBUG org.hibernate.SQL [main] alter table if exists tvshow_genre_ids drop constraint if exists FKkstipni8ntcvnf7qyig39ioko
2024-01-04 14:09:38,468 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] SQL Warning Code: 0, SQLState: 00000
2024-01-04 14:09:38,468 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] constraint "fkkstipni8ntcvnf7qyig39ioko" of relation "tvshow_genre_ids" does not exist, skipping
2024-01-04 14:09:38,468 DEBUG org.hibernate.SQL [main] alter table if exists tvshow_origin_country drop constraint if exists FK52epnt0ll9s22ljtcwbu5gs8k
2024-01-04 14:09:38,468 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] SQL Warning Code: 0, SQLState: 00000
2024-01-04 14:09:38,469 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] constraint "fk52epnt0ll9s22ljtcwbu5gs8k" of relation "tvshow_origin_country" does not exist, skipping
2024-01-04 14:09:38,469 DEBUG org.hibernate.SQL [main] alter table if exists weather_sky drop constraint if exists FKo158fsihyv0lleowmgpselhqe
2024-01-04 14:09:38,469 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] SQL Warning Code: 0, SQLState: 00000
2024-01-04 14:09:38,469 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] relation "weather_sky" does not exist, skipping
2024-01-04 14:09:38,469 DEBUG org.hibernate.SQL [main] drop table if exists anime cascade
2024-01-04 14:09:38,473 DEBUG org.hibernate.SQL [main] drop table if exists anime_images_response cascade
2024-01-04 14:09:38,475 DEBUG org.hibernate.SQL [main] drop table if exists dollar_value cascade
2024-01-04 14:09:38,477 DEBUG org.hibernate.SQL [main] drop table if exists email cascade
2024-01-04 14:09:38,478 DEBUG org.hibernate.SQL [main] drop table if exists game cascade
2024-01-04 14:09:38,480 DEBUG org.hibernate.SQL [main] drop table if exists jpg_images_response cascade
2024-01-04 14:09:38,482 DEBUG org.hibernate.SQL [main] drop table if exists movie_genre_ids cascade
2024-01-04 14:09:38,483 DEBUG org.hibernate.SQL [main] drop table if exists movies cascade
2024-01-04 14:09:38,486 DEBUG org.hibernate.SQL [main] drop table if exists news cascade
2024-01-04 14:09:38,489 DEBUG org.hibernate.SQL [main] drop table if exists tabnews_response cascade
2024-01-04 14:09:38,491 DEBUG org.hibernate.SQL [main] drop table if exists task cascade
2024-01-04 14:09:38,492 DEBUG org.hibernate.SQL [main] drop table if exists tv_shows cascade
2024-01-04 14:09:38,494 DEBUG org.hibernate.SQL [main] drop table if exists tvshow_genre_ids cascade
2024-01-04 14:09:38,495 DEBUG org.hibernate.SQL [main] drop table if exists tvshow_origin_country cascade
2024-01-04 14:09:38,496 DEBUG org.hibernate.SQL [main] drop table if exists weather_forecast cascade
2024-01-04 14:09:38,497 DEBUG org.hibernate.SQL [main] drop table if exists weather_predict cascade
2024-01-04 14:09:38,499 DEBUG org.hibernate.SQL [main] drop table if exists weather_response cascade
2024-01-04 14:09:38,499 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] SQL Warning Code: 0, SQLState: 00000
2024-01-04 14:09:38,499 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] table "weather_response" does not exist, skipping
2024-01-04 14:09:38,499 DEBUG org.hibernate.SQL [main] drop table if exists weather_sky cascade
2024-01-04 14:09:38,499 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] SQL Warning Code: 0, SQLState: 00000
2024-01-04 14:09:38,499 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] table "weather_sky" does not exist, skipping
2024-01-04 14:09:38,499 DEBUG org.hibernate.SQL [main] drop table if exists weather_wind cascade
2024-01-04 14:09:38,499 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] SQL Warning Code: 0, SQLState: 00000
2024-01-04 14:09:38,499 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] table "weather_wind" does not exist, skipping
2024-01-04 14:09:38,499 DEBUG org.hibernate.SQL [main] drop table if exists webp_image_response cascade
2024-01-04 14:09:38,500 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] SQL Warning Code: 0, SQLState: 00000
2024-01-04 14:09:38,500 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [main] table "webp_image_response" does not exist, skipping
2024-01-04 14:09:38,500 DEBUG org.hibernate.SQL [main] drop sequence if exists anime_images_response_seq
2024-01-04 14:09:38,501 DEBUG org.hibernate.SQL [main] drop sequence if exists dollar_value_seq
2024-01-04 14:09:38,502 DEBUG org.hibernate.SQL [main] drop sequence if exists email_seq
2024-01-04 14:09:38,504 DEBUG org.hibernate.SQL [main] drop sequence if exists game_seq
2024-01-04 14:09:38,505 DEBUG org.hibernate.SQL [main] drop sequence if exists jpg_images_response_seq
2024-01-04 14:09:38,506 DEBUG org.hibernate.SQL [main] drop sequence if exists news_seq
2024-01-04 14:09:38,507 DEBUG org.hibernate.SQL [main] drop sequence if exists tabnews_response_seq
2024-01-04 14:09:38,508 DEBUG org.hibernate.SQL [main] drop sequence if exists task_seq
2024-01-04 14:09:38,510 DEBUG org.hibernate.SQL [main] drop sequence if exists weather_forecast_seq
2024-01-04 14:09:38,511 DEBUG org.hibernate.SQL [main] drop sequence if exists weather_predict_seq
2024-01-04 14:09:38,512 DEBUG org.hibernate.SQL [main] drop sequence if exists weather_response_seq
2024-01-04 14:09:38,513 DEBUG org.hibernate.SQL [main] drop sequence if exists weather_sky_seq
2024-01-04 14:09:38,514 DEBUG org.hibernate.SQL [main] drop sequence if exists weather_wind_seq
2024-01-04 14:09:38,515 DEBUG org.hibernate.SQL [main] drop sequence if exists webp_image_response_seq
2024-01-04 14:09:38,520 DEBUG org.hibernate.SQL [main] create sequence anime_images_response_seq start with 1 increment by 50
2024-01-04 14:09:38,524 DEBUG org.hibernate.SQL [main] create sequence dollar_value_seq start with 1 increment by 50
2024-01-04 14:09:38,525 DEBUG org.hibernate.SQL [main] create sequence email_seq start with 1 increment by 50
2024-01-04 14:09:38,526 DEBUG org.hibernate.SQL [main] create sequence game_seq start with 1 increment by 50
2024-01-04 14:09:38,527 DEBUG org.hibernate.SQL [main] create sequence jpg_images_response_seq start with 1 increment by 50
2024-01-04 14:09:38,527 DEBUG org.hibernate.SQL [main] create sequence news_seq start with 1 increment by 50
2024-01-04 14:09:38,528 DEBUG org.hibernate.SQL [main] create sequence tabnews_response_seq start with 1 increment by 50
2024-01-04 14:09:38,530 DEBUG org.hibernate.SQL [main] create sequence task_seq start with 1 increment by 50
2024-01-04 14:09:38,531 DEBUG org.hibernate.SQL [main] create sequence weather_forecast_seq start with 1 increment by 50
2024-01-04 14:09:38,532 DEBUG org.hibernate.SQL [main] create sequence weather_predict_seq start with 1 increment by 50
2024-01-04 14:09:38,533 DEBUG org.hibernate.SQL [main] create sequence weather_response_seq start with 1 increment by 50
2024-01-04 14:09:38,534 DEBUG org.hibernate.SQL [main] create sequence weather_sky_seq start with 1 increment by 50
2024-01-04 14:09:38,535 DEBUG org.hibernate.SQL [main] create sequence weather_wind_seq start with 1 increment by 50
2024-01-04 14:09:38,536 DEBUG org.hibernate.SQL [main] create sequence webp_image_response_seq start with 1 increment by 50
2024-01-04 14:09:38,541 DEBUG org.hibernate.SQL [main] create table anime (episodes integer, score float(53), year integer, images_id bigint unique, mal_id bigint not null, synopsis varchar(5000), rating varchar(255), season varchar(255), title varchar(255), url varchar(255), primary key (mal_id))
2024-01-04 14:09:38,548 DEBUG org.hibernate.SQL [main] create table anime_images_response (id bigint not null, jpg bytea, webp bytea, primary key (id))
2024-01-04 14:09:38,554 DEBUG org.hibernate.SQL [main] create table dollar_value (ask numeric(38,2), bid numeric(38,2), high numeric(38,2), low numeric(38,2), percent_change numeric(38,2), timestamp numeric(38,2), variation_bid numeric(38,2), id bigint not null, code varchar(255), codein varchar(255), create_date varchar(255), name varchar(255), primary key (id))
2024-01-04 14:09:38,559 DEBUG org.hibernate.SQL [main] create table email (id bigint not null, sent_date timestamp(6), content TEXT, sender varchar(255), subject varchar(255), primary key (id))
2024-01-04 14:09:38,563 DEBUG org.hibernate.SQL [main] create table game (rating float(53), rating_top integer, ratings_count integer, tba boolean, id bigint not null, background_image varchar(255), name varchar(255), released varchar(255), slug varchar(255), primary key (id))
2024-01-04 14:09:38,567 DEBUG org.hibernate.SQL [main] create table jpg_images_response (id bigint not null, image_url varchar(255), large_image_url varchar(255), small_image_url varchar(255), primary key (id))
2024-01-04 14:09:38,572 DEBUG org.hibernate.SQL [main] create table movie_genre_ids (genre_id integer, movie_id bigint not null)
2024-01-04 14:09:38,573 DEBUG org.hibernate.SQL [main] create table movies (adult boolean, popularity float(53), release_date date, video boolean, vote_average float(53), vote_count integer, id bigserial not null, overview varchar(1000), backdrop_path varchar(255), media_type varchar(255), original_language varchar(255), original_title varchar(255), poster_path varchar(255), title varchar(255), primary key (id))
2024-01-04 14:09:38,577 DEBUG org.hibernate.SQL [main] create table news (id bigint not null, description varchar(255), title varchar(255), url varchar(255), primary key (id))
2024-01-04 14:09:38,581 DEBUG org.hibernate.SQL [main] create table tabnews_response (children_deep_count integer, tabcoins integer, id_local bigint not null, created_at varchar(255), deleted_at varchar(255), owner_id varchar(255), owner_username varchar(255), parent_id varchar(255), published_at varchar(255), slug varchar(255), source_url varchar(255), status varchar(255), title varchar(255), updated_at varchar(255), primary key (id_local))
2024-01-04 14:09:38,585 DEBUG org.hibernate.SQL [main] create table task (completed boolean not null, id bigint not null, description varchar(255), primary key (id))
2024-01-04 14:09:38,587 DEBUG org.hibernate.SQL [main] create table tv_shows (first_air_date date, popularity float(53), vote_average float(53), vote_count integer, id bigserial not null, overview varchar(1000), backdrop_path varchar(255), media_type varchar(255), name varchar(255), original_language varchar(255), original_name varchar(255), poster_path varchar(255), primary key (id))
2024-01-04 14:09:38,591 DEBUG org.hibernate.SQL [main] create table tvshow_genre_ids (genre_id integer, tvshow_id bigint not null)
2024-01-04 14:09:38,592 DEBUG org.hibernate.SQL [main] create table tvshow_origin_country (tvshow_id bigint not null, origin_country varchar(255))
2024-01-04 14:09:38,593 DEBUG org.hibernate.SQL [main] create table weather_forecast (temperature float(53), id bigint not null, city varchar(255), description varchar(255), primary key (id))
2024-01-04 14:09:38,597 DEBUG org.hibernate.SQL [main] create table weather_predict (feels_like numeric(38,2), grnd_level integer not null, humidity integer not null, pressure integer not null, sea_level integer not null, temp numeric(38,2), temp_max numeric(38,2), temp_min numeric(38,2), id bigint not null, primary key (id))
2024-01-04 14:09:38,600 DEBUG org.hibernate.SQL [main] create table weather_response (id bigint not null, main bytea, wind bytea, primary key (id))
2024-01-04 14:09:38,605 DEBUG org.hibernate.SQL [main] create table weather_sky (id bigint not null, weather_response_id bigint, description varchar(255), main varchar(255), primary key (id))
2024-01-04 14:09:38,609 DEBUG org.hibernate.SQL [main] create table weather_wind (deg integer, gust float(53), speed float(53), id bigint not null, primary key (id))
2024-01-04 14:09:38,611 DEBUG org.hibernate.SQL [main] create table webp_image_response (id bigint not null, image_url varchar(255), large_image_url varchar(255), small_image_url varchar(255), primary key (id))
2024-01-04 14:09:38,615 DEBUG org.hibernate.SQL [main] alter table if exists anime add constraint FK6bkluadunhfvh5d9lu8qw2xkc foreign key (images_id) references anime_images_response
2024-01-04 14:09:38,617 DEBUG org.hibernate.SQL [main] alter table if exists movie_genre_ids add constraint FKpf8hdcyxi1qxf0t2jx78w9ruk foreign key (movie_id) references movies
2024-01-04 14:09:38,619 DEBUG org.hibernate.SQL [main] alter table if exists tvshow_genre_ids add constraint FKkstipni8ntcvnf7qyig39ioko foreign key (tvshow_id) references tv_shows
2024-01-04 14:09:38,619 DEBUG org.hibernate.SQL [main] alter table if exists tvshow_origin_country add constraint FK52epnt0ll9s22ljtcwbu5gs8k foreign key (tvshow_id) references tv_shows
2024-01-04 14:09:38,621 DEBUG org.hibernate.SQL [main] alter table if exists weather_sky add constraint FKo158fsihyv0lleowmgpselhqe foreign key (weather_response_id) references weather_response
2024-01-04 14:09:38,624 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-01-04 14:09:38,764 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-01-04 14:09:39,092 DEBUG org.hibernate.stat.internal.StatisticsInitiator [main] Statistics initialized [enabled=false]
2024-01-04 14:09:42,083 INFO org.springframework.cloud.commons.util.InetUtils [main] Cannot determine local hostname
2024-01-04 14:09:42,116 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 16 endpoint(s) beneath base path '/actuator'
2024-01-04 14:09:42,186 INFO io.undertow [main] starting server: Undertow - 2.3.10.Final
2024-01-04 14:09:42,192 INFO org.xnio [main] XNIO version 3.8.8.Final
2024-01-04 14:09:42,199 INFO org.xnio.nio [main] XNIO NIO Implementation Version 3.8.8.Final
2024-01-04 14:09:42,260 INFO org.jboss.threads [main] JBoss Threads version 3.5.0.Final
2024-01-04 14:09:42,308 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [main] Undertow started on port 8193 (http)
2024-01-04 14:09:43,394 INFO org.springframework.cloud.commons.util.InetUtils [main] Cannot determine local hostname
2024-01-04 14:09:43,403 INFO tech.noetzold.dailyAPI.DailyApiApplication [main] Started DailyApiApplication in 10.695 seconds (process running for 11.184)
2024-01-04 14:10:30,389 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-01-04 14:10:30,389 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2024-01-04 14:10:30,391 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 2 ms
2024-01-04 14:10:30,731 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /weather/now
jakarta.servlet.ServletException: Request processing failed: org.springframework.data.redis.serializer.SerializationException: Cannot deserialize
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1022)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:527)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1512)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.data.redis.serializer.SerializationException: Cannot deserialize
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:108)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:46)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:277)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:392)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:210)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:73)
	at org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:494)
	at org.springframework.cache.interceptor.CacheAspectSupport.findCachedValue(CacheAspectSupport.java:457)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:407)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:371)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:74)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at tech.noetzold.dailyAPI.service.WeatherPredictService$$SpringCGLIB$$0.getWeather(<generated>)
	at tech.noetzold.dailyAPI.controller.WeatherPredictController.getWeather(WeatherPredictController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	... 52 common frames omitted
Caused by: org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:80)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:37)
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:106)
	... 81 common frames omitted
Caused by: java.io.InvalidClassException: tech.noetzold.dailyAPI.model.dto.WeatherResponse; local class incompatible: stream classdesc serialVersionUID = -7742512114106132140, local class serialVersionUID = 3513698171615971318
	at java.base/java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:601)
	at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:2062)
	at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1909)
	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2235)
	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:514)
	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:472)
	at org.springframework.core.serializer.DefaultDeserializer.deserialize(DefaultDeserializer.java:71)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:75)
	... 83 common frames omitted
2024-01-04 14:12:07,750 INFO tech.noetzold.dailyAPI.controller.AnimeController [XNIO-1 task-2] Cleaning cache - news
2024-01-04 14:12:07,755 INFO tech.noetzold.dailyAPI.controller.AnimeController [XNIO-1 task-2] Cleaning cache - game
2024-01-04 14:12:07,756 INFO tech.noetzold.dailyAPI.controller.AnimeController [XNIO-1 task-2] Cleaning cache - movie
2024-01-04 14:12:07,757 INFO tech.noetzold.dailyAPI.controller.AnimeController [XNIO-1 task-2] Cleaning cache - weather
2024-01-04 14:12:07,761 INFO tech.noetzold.dailyAPI.controller.AnimeController [XNIO-1 task-2] Cleaning cache - tvshow
2024-01-04 14:12:07,762 INFO tech.noetzold.dailyAPI.controller.AnimeController [XNIO-1 task-2] Cleaning cache - anime
2024-01-04 14:12:07,763 INFO tech.noetzold.dailyAPI.controller.AnimeController [XNIO-1 task-2] Cleaning cache - email
2024-01-04 14:12:07,763 INFO tech.noetzold.dailyAPI.controller.AnimeController [XNIO-1 task-2] Cleaning cache - dollar
2024-01-04 14:12:13,950 DEBUG org.hibernate.SQL [XNIO-1 task-2] select wr1_0.id,wr1_0.main,wr1_0.wind,w1_0.weather_response_id,w1_0.id,w1_0.description,w1_0.main from weather_response wr1_0 left join weather_sky w1_0 on wr1_0.id=w1_0.weather_response_id where wr1_0.id=?
2024-01-04 14:12:13,962 DEBUG org.hibernate.SQL [XNIO-1 task-2] select nextval('weather_response_seq')
2024-01-04 14:12:13,973 DEBUG org.hibernate.SQL [XNIO-1 task-2] select ws1_0.id,ws1_0.description,ws1_0.main,wr1_0.id,wr1_0.main,wr1_0.wind from weather_sky ws1_0 left join weather_response wr1_0 on wr1_0.id=ws1_0.weather_response_id where ws1_0.id=?
2024-01-04 14:12:13,974 DEBUG org.hibernate.SQL [XNIO-1 task-2] select nextval('weather_sky_seq')
2024-01-04 14:12:13,992 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into weather_response (main,wind,id) values (?,?,?)
2024-01-04 14:12:13,995 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into weather_sky (description,main,weather_response_id,id) values (?,?,?,?)
2024-01-04 14:12:14,014 INFO tech.noetzold.dailyAPI.controller.AnimeController [XNIO-1 task-2] Get Weather infos
2024-01-04 14:12:19,508 INFO tech.noetzold.dailyAPI.controller.AnimeController [XNIO-1 task-2] Get Weather infos
2024-01-04 14:12:20,332 INFO tech.noetzold.dailyAPI.controller.AnimeController [XNIO-1 task-2] Get Weather infos
2024-01-04 14:12:20,805 INFO tech.noetzold.dailyAPI.controller.AnimeController [XNIO-1 task-2] Get Weather infos
2024-01-04 19:08:37,696 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2024-01-04 19:08:37,714 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
